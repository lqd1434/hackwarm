{"remainingRequest":"/Users/lqd/WebstormProjects/warm/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lqd/WebstormProjects/warm/src/views/talk/TalkWin.vue?vue&type=style&index=0&id=8e8868b2&scoped=true&lang=css&","dependencies":[{"path":"/Users/lqd/WebstormProjects/warm/src/views/talk/TalkWin.vue","mtime":1618737441787},{"path":"/Users/lqd/WebstormProjects/warm/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lqd/WebstormProjects/warm/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/lqd/WebstormProjects/warm/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/lqd/WebstormProjects/warm/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lqd/WebstormProjects/warm/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiNyb290ewogIG92ZXJmbG93OiBhdXRvOwp9Ci50YWxrV2luLWhlYWRlcnsKICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsKfQouZm9vdGVyLWlucHV0ewogIG1hcmdpbi1sZWZ0OiAycmVtOwogIHdpZHRoOiA2MCU7CiAgaGVpZ2h0OiAyLjVyZW07CiAgYm9yZGVyLXJhZGl1czogMS4zcmVtOwp9Ci5zZW5kLWJ0bnsKICBtYXJnaW4tdG9wOiAtMXJlbTsKICBtYXJnaW4tbGVmdDogMC41cmVtOwp9Ci5iaS1lbW9qaS1zbWlsZXsKICBwYWRkaW5nLWxlZnQ6IDAuNnJlbTsKICBmb250LXNpemU6IDMwcHg7Cn0KLm1lc3NhZ2V7CiAgcG9zaXRpb246IHJlbGF0aXZlOwogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKfQoubWVzc2FnZS1yaWdodHsKICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwp9Ci5tZXNzYWdlLWljb257CiAgaGVpZ2h0OiA1MHB4OwogIHdpZHRoOiA1MHB4OwogIGJvcmRlci1yYWRpdXM6IDUwJTsKfQoubWVzc2FnZS1pY29uLXJpZ2h0ewogIGhlaWdodDogNTBweDsKICB3aWR0aDogNTBweDsKICBmbG9hdDogcmlnaHQ7CiAgYm9yZGVyLXJhZGl1czogNTAlOwp9Ci5tZXNzYWdlIC50ZXh0IHsKICBtaW4td2lkdGg6MjAwcHg7CiAgbWluLWhlaWdodDogMzBweDsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDE4MywxODMsMTkwLDEpOwogIHRleHQtYWxpZ246IGxlZnQ7CiAgYm9yZGVyLXJhZGl1czogNnB4OwogIHBhZGRpbmc6IDVweCAwIDAgMDsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgei1pbmRleDogMTsKICB0b3A6IDA7CiAgbGVmdDogMTEwJTsKICBmb250LXNpemU6IDE1cHg7Cn0KLm1lc3NhZ2UtcmlnaHQgLnRleHQtcmlnaHQgewogIHdpZHRoOiAyMDBweDsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDE2LDE2LDE2LDEpOwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBib3JkZXItcmFkaXVzOiA2cHg7CiAgcGFkZGluZzogNXB4IDA7CiAgcG9zaXRpb246IGFic29sdXRlOwogIHotaW5kZXg6IDE7CiAgdG9wOiAtNXB4OwogIHJpZ2h0OiAxMTAlOwp9Ci5jaGF0LXdpbmRvdyAuY2FyZCB7CiAgYm9yZGVyOiAwOwp9CnB7CiAgbWFyZ2luOiAwOwogIHBhZGRpbmc6IDAKfQoubWVzc2FnZS1jb250ZW50ewogIGNvbG9yOiBibGFjazsKICBwYWRkaW5nLWJvdHRvbTogMTBweDsKICBwYWRkaW5nLWxlZnQ6IDEycHg7Cgp9Ci5tZXNzYWdlLWNvbnRlbnQtcmlnaHR7CiAgZm9udC1zaXplOiAxNXB4OwogIGNvbG9yOiB3aGl0ZTsKICBwYWRkaW5nLWJvdHRvbTogMTBweDsKICBwYWRkaW5nLXJpZ2h0OiAxMnB4OwoKfQouc2VuZC10aW1lewogIHBhZGRpbmctbGVmdDogMTJweDsKICBjb2xvcjogIzFEODRGRjsKICBmb250LXNpemU6IDEycHg7Cn0KLnNlbmQtdGltZS1yaWdodHsKICBwYWRkaW5nLXJpZ2h0OiAxMnB4OwogIGNvbG9yOiAjMWZjMzllOwogIGZvbnQtc2l6ZTogMTJweDsKfQoubWVzc2FnZSAudGV4dDo6YWZ0ZXIgewogIGNvbnRlbnQ6ICIiOwogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICB0b3A6IDUwJTsKICByaWdodDogMTAwJTsKICBtYXJnaW4tdG9wOiAtNXB4OwogIGJvcmRlci13aWR0aDogNXB4OwogIGJvcmRlci1zdHlsZTogc29saWQ7CiAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudCByZ2JhKDE4MywxODMsMTkwLDEpIHRyYW5zcGFyZW50IHRyYW5zcGFyZW50Owp9Ci5tZXNzYWdlLXJpZ2h0IC50ZXh0LXJpZ2h0OjphZnRlciB7CiAgY29udGVudDogIiI7CiAgcG9zaXRpb246IGFic29sdXRlOwogIHRvcDogNTAlOwogIGxlZnQ6IDEwMCU7CiAgbWFyZ2luLXRvcDogLTVweDsKICBib3JkZXItd2lkdGg6IDVweDsKICBib3JkZXItc3R5bGU6IHNvbGlkOwogIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgcmdiYSgxNiwxNiwxNiwxKTs7Cn0KLmNoYXQtd2luZG93ewogIG1hcmdpbi1ib3R0b206IDEyMHB4Owp9Ci5iaS1hcnJvdy1sZWZ0LWNpcmNsZS1maWxsewogIGZvbnQtc2l6ZTogMjVweDsKICBmb250LXdlaWdodDogODAwOwp9CmltZ3sKICBib3JkZXI6IGJsYWNrIDFweCBzb2xpZDsKfQo="},{"version":3,"sources":["TalkWin.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TalkWin.vue","sourceRoot":"src/views/talk","sourcesContent":["<template>\n  <div id=\"root\">\n      <div class=\"talkWin-header fixed-top\" style=\"font-size: 20px\">\n        <div class=\"mt-4\"></div>\n        <div class=\"border-bottom\">\n          <i class=\"bi bi-arrow-left-circle-fill ml-3 mr-3\" @click=\"back\"></i>\n          <span>匿名用户</span>\n        </div>\n      </div>\n    <div class=\"chat-window pt-5\" id=\"chat\">\n      <div v-for=\"item in messageHistory\" :key=\"item.id\">\n        <!--        左边-->\n        <div class=\"card\" v-if=\"item.from===talkToWho\">\n          <div class=\"card-body\">\n            <div class=\"message\">\n              <img src=\"/images/left-nm.jpeg\" class=\"message-icon\"/>\n              <div class=\"text\">\n                <div class=\"message-content\">{{ item.msg }}</div>\n                <p class=\"send-time\">{{ (item.created_at.slice(0,19)).replace('T','\\t时间\\t') }}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n        <!--  右边-->\n        <div class=\"card\" v-if=\"item.from===user.id\">\n          <div class=\"card-body\">\n            <div class=\"message-right float-right\">\n              <img src=\"/images/right-nm.jpg\" class=\"message-icon-right\"/>\n              <div class=\"text-right\">\n                <div class=\"message-content-right\">{{ item.msg }}</div>\n                <p class=\"send-time-right\">{{ (item.created_at.slice(0,19)).replace('T',' 时间 ') }}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"row fixed-bottom bg-white\">\n      <div class=\"input-group\">\n        <input type=\"text\" v-model=\"messageText\" class=\"footer-input\" placeholder=\"请输入聊天内容\"/>\n        <div>\n          <i class=\"bi bi-emoji-smile\"></i>\n          <button class=\"send-btn btn btn-dark\" @click=\"sendMessage\">发送</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {createNamespacedHelpers} from 'vuex'\n\nconst { mapState,mapMutations,mapActions } = createNamespacedHelpers('warm')\nexport default {\n  name: \"TalkWin\",\n  data () {\n    return {\n      messageText: \"\",\n      messages:[],\n      isEmpty:false,\n    }\n  },\n  computed:{\n    ...mapState(['user','maxId','talkToWho','messageHistory','socket'])\n  },\n  mounted() {\n    this.getMessageHistory({fromId:this.user.id,toId:this.talkToWho}).then((res)=> {\n      console.log(res.data)\n      this.messages = res.data\n      const {From, To} = res.data\n      console.log(From)\n      console.log(To)\n      if (From.length > 0 || To.length > 0) {\n        this.isEmpty=false\n        From.map((item, index) => {\n          From[index].created_at = (From[index].created_at.slice(0, 19)).replace('T', ' 时间 ')\n        })\n        To.map((item, index) => {\n          To[index].created_at = (To[index].created_at.slice(0, 19)).replace('T', ' 时间 ')\n        })\n        this.messages = [...From, ...To]\n        for (let i = 1; i < this.messages.length; i++) {\n          for (let j = i; j > 0; j--) {\n            if (this.messages[j].id < this.messages[j - 1].id) {\n              let pre = this.messages[j];\n              this.messages[j] = this.messages[j - 1];\n              this.messages[j - 1] = pre;\n            }\n          }\n        }\n        console.log(this.messages)\n        this.setMessageHistory(this.messages)\n        this.setMaxId(this.messages[this.messages.length - 1].id)\n        this.setMinId(this.messages[0].id)\n      }else {\n        this.isEmpty = true\n        this.messages=[]\n        this.setMessageHistory(this.messages)\n      }\n    })\n  },\n  methods:{\n    ...mapMutations(['changeIsShowFooterMenu','setMaxId','setMessageHistory',\n      'addMessageHistory','setMinId','increaseMaxId'\n    ]),\n    ...mapActions(['getMessageHistory','addChatListAction']),\n    sendMessage(){\n      if (this.messageText) {\n        this.increaseMaxId()\n        const date1 = (new Date().toLocaleDateString()).replace(/\\//g, '-')\n        const time1 = (new Date().toLocaleTimeString()).slice(2)\n        const date = date1 + ' 时间 ' + time1\n        this.socket.send(''+this.talkToWho+':'+this.messageText)\n        console.log(this.maxId)\n        const message = {\n          id: this.isEmpty ? 1:this.maxId+1,\n          created_at: date,\n          from: this.user.id,\n          to: this.talkToWho,\n          msg: this.messageText\n        }\n        console.log(this.messages.length)\n        this.addMessageHistory(message)\n        const message2={fromId:this.user.id,LastMsg:this.messageText,CreatedAt:date}\n        this.addChatListAction(message2)\n        console.log(this.messages.length)\n        console.log(JSON.stringify(message))\n        this.messageText=''\n      }\n    },\n    back(){\n      this.changeIsShowFooterMenu(true)\n      this.$router.go(-1)\n    }\n  }\n}\n</script>\n\n<style scoped>\n#root{\n  overflow: auto;\n}\n.talkWin-header{\n  background-color: white;\n}\n.footer-input{\n  margin-left: 2rem;\n  width: 60%;\n  height: 2.5rem;\n  border-radius: 1.3rem;\n}\n.send-btn{\n  margin-top: -1rem;\n  margin-left: 0.5rem;\n}\n.bi-emoji-smile{\n  padding-left: 0.6rem;\n  font-size: 30px;\n}\n.message{\n  position: relative;\n  display: inline-block;\n}\n.message-right{\n  position: relative;\n  display: inline-block;\n}\n.message-icon{\n  height: 50px;\n  width: 50px;\n  border-radius: 50%;\n}\n.message-icon-right{\n  height: 50px;\n  width: 50px;\n  float: right;\n  border-radius: 50%;\n}\n.message .text {\n  min-width:200px;\n  min-height: 30px;\n  background-color: rgba(183,183,190,1);\n  text-align: left;\n  border-radius: 6px;\n  padding: 5px 0 0 0;\n  position: absolute;\n  z-index: 1;\n  top: 0;\n  left: 110%;\n  font-size: 15px;\n}\n.message-right .text-right {\n  width: 200px;\n  background-color: rgba(16,16,16,1);\n  text-align: center;\n  border-radius: 6px;\n  padding: 5px 0;\n  position: absolute;\n  z-index: 1;\n  top: -5px;\n  right: 110%;\n}\n.chat-window .card {\n  border: 0;\n}\np{\n  margin: 0;\n  padding: 0\n}\n.message-content{\n  color: black;\n  padding-bottom: 10px;\n  padding-left: 12px;\n\n}\n.message-content-right{\n  font-size: 15px;\n  color: white;\n  padding-bottom: 10px;\n  padding-right: 12px;\n\n}\n.send-time{\n  padding-left: 12px;\n  color: #1D84FF;\n  font-size: 12px;\n}\n.send-time-right{\n  padding-right: 12px;\n  color: #1fc39e;\n  font-size: 12px;\n}\n.message .text::after {\n  content: \"\";\n  position: absolute;\n  top: 50%;\n  right: 100%;\n  margin-top: -5px;\n  border-width: 5px;\n  border-style: solid;\n  border-color: transparent rgba(183,183,190,1) transparent transparent;\n}\n.message-right .text-right::after {\n  content: \"\";\n  position: absolute;\n  top: 50%;\n  left: 100%;\n  margin-top: -5px;\n  border-width: 5px;\n  border-style: solid;\n  border-color: transparent transparent transparent rgba(16,16,16,1);;\n}\n.chat-window{\n  margin-bottom: 120px;\n}\n.bi-arrow-left-circle-fill{\n  font-size: 25px;\n  font-weight: 800;\n}\nimg{\n  border: black 1px solid;\n}\n</style>\n"]}]}